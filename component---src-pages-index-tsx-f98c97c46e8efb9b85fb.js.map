{"version":3,"sources":["webpack:///./src/pages/index.module.scss","webpack:///./src/pages/index.tsx"],"names":["module","exports","Index","data","location","siteTitle","site","siteMetadata","title","className","styles","root","fluid","file","childImageSharp","content","logo","cover","direction","to","bg","button","width","height","viewBox","fill","xmlns","x1","y1","x2","y2","stroke","strokeWidth","strokeLinecap","d","strokeLinejoin","titleQuery"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,KAAO,4BAA4B,QAAU,+BAA+B,KAAO,4BAA4B,OAAS,gC,kCCD1I,8KAwEeC,UArDD,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACfC,EAAYF,EAAKG,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,aACX,yBAAKC,UAAWC,IAAOC,MACrB,kBAAC,IAAD,CAAKC,MAAOT,EAAKU,KAAKC,gBAAgBF,QACtC,yBAAKH,UAAWC,IAAOK,SACrB,yBAAKN,UAAWC,IAAOM,MACrB,kBAAC,IAAD,OAEF,8DACA,yDACA,kBAAC,IAAD,CACEC,OAAK,EACLC,UAAU,KACVC,GAAG,SACHC,GAAG,QACHX,UAAWC,IAAOW,QALpB,cAOc,IACZ,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,OAAO,QACPC,YAAY,IACZC,cAAc,UAEhB,0BACEC,EAAE,iBACFH,OAAO,QACPC,YAAY,IACZC,cAAc,QACdE,eAAe,gBAYxB,IAAMC,EAAa","file":"component---src-pages-index-tsx-f98c97c46e8efb9b85fb.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index-module--root--1o1-6\",\"content\":\"index-module--content--1f4nN\",\"logo\":\"index-module--logo--36y26\",\"button\":\"index-module--button--15p47\"};","// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport styles from \"./index.module.scss\"\nimport Img from \"gatsby-image\"\n\nimport Logo from \"../components/logo\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n}\n\nconst Index = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Playbook\" />\n      <div className={styles.root}>\n        <Img fluid={data.file.childImageSharp.fluid} />\n        <div className={styles.content}>\n          <div className={styles.logo}>\n            <Logo />\n          </div>\n          <h1>Volunteer Coordinator Playbook</h1>\n          <h2>How to make it a success!</h2>\n          <AniLink\n            cover\n            direction=\"up\"\n            to=\"/intro\"\n            bg=\"white\"\n            className={styles.button}\n          >\n            Get started{\" \"}\n            <svg\n              width=\"12\"\n              height=\"15\"\n              viewBox=\"0 0 12 15\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <line\n                x1=\"6\"\n                y1=\"1\"\n                x2=\"6\"\n                y2=\"12\"\n                stroke=\"white\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n              />\n              <path\n                d=\"M11 9L6 14L1 9\"\n                stroke=\"white\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </AniLink>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const titleQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    file(relativePath: { eq: \"coverImage.png\" }) {\n      childImageSharp {\n        fluid(quality: 90) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}