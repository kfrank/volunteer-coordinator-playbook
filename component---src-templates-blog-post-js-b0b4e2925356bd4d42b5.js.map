{"version":3,"sources":["webpack:///./src/templates/blog-post.module.scss","webpack:///./src/templates/blog-post.js"],"names":["module","exports","BlogPostTemplate","data","location","post","pageContext","markdownRemark","siteTitle","site","siteMetadata","title","matches","allPagesJson","edges","postTitle","frontmatter","sections","findMatch","allMarkdownRemark","coverImage","className","styles","heroImage","fluid","childImageSharp","map","index","node","children","subpages","parent","i","Title","pageNumber","section","dangerouslySetInnerHTML","__html","html","calloutText","callout","calloutTitle","calloutCopy","next","nextParent","nextParentSlug","slug","length","cover","direction","bg","to","nextPage","trigger","pages","a","entry","querySelector","scrollTo","nextPageContainer","nextPageNumber","nextExcerpt","ind","excerpt","nextPageButton","width","height","viewBox","fill","xmlns","x1","y1","x2","y2","stroke","strokeWidth","strokeLinecap","d","strokeLinejoin","nextPageSection","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-b0b4e2925356bd4d42b5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroImage\":\"blog-post-module--heroImage--36-jc\",\"pageNumber\":\"blog-post-module--pageNumber--Fmq90\",\"section\":\"blog-post-module--section--3lI_D\",\"callout\":\"blog-post-module--callout--38hw_\",\"calloutTitle\":\"blog-post-module--calloutTitle--3Iiq8\",\"bottomImage\":\"blog-post-module--bottomImage--Ey0uv\",\"bottomImageContainer\":\"blog-post-module--bottomImageContainer--L04_U\",\"gatsbyRespImageBackgroundImage\":\"blog-post-module--gatsby-resp-image-background-image--3UzAS\",\"gatsbyRespImageLink\":\"blog-post-module--gatsby-resp-image-link--1Adt1\",\"nextPage\":\"blog-post-module--nextPage--1VJ3l\",\"nextPageContainer\":\"blog-post-module--nextPageContainer--2ExVS\",\"nextPageNumber\":\"blog-post-module--nextPageNumber--QJDk8\",\"nextPageButton\":\"blog-post-module--nextPageButton--2OCJq\",\"nextExcerpt\":\"blog-post-module--nextExcerpt--3-tZ6\",\"nextPageSection\":\"blog-post-module--nextPageSection--LlL_B\",\"bounce\":\"blog-post-module--bounce--1iGop\"};","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styles from \"./blog-post.module.scss\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\nconst BlogPostTemplate = ({ data, location, pageContext }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const matches = data.allPagesJson.edges\n  const postTitle = post.frontmatter.title\n\n  const sections = data.allPagesJson.edges\n  const findMatch = data.allMarkdownRemark.edges\n\n  // Next Variables\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={`Volunteer Playbook | ${post.frontmatter.title}`} />\n      {post.frontmatter.coverImage ? (\n        <div className={styles.heroImage}>\n          <Img fluid={post.frontmatter.coverImage.childImageSharp.fluid} />\n        </div>\n      ) : (\n        <></>\n      )}\n      <article>\n        <header>\n          {matches.map(({ node }, index) => {\n            const children = node.subpages\n            const parent = node.title\n            return (\n              <>\n                {children.map(({ Title }, i) => {\n                  return (\n                    <>\n                      {post.frontmatter.title === Title ? (\n                        <>\n                          <span className={styles.pageNumber}>{i + 1}.</span>\n                          <h2>{parent}</h2>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </>\n                  )\n                })}\n              </>\n            )\n          })}\n          <h1>{postTitle}</h1>\n        </header>\n        <section\n          className={styles.section}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n\n        {post.frontmatter.calloutText ? (\n          <div className={styles.callout}>\n            <h3 className={styles.calloutTitle}>\n              {post.frontmatter.calloutTitle}\n            </h3>\n            <div className={styles.calloutCopy}>\n              {post.frontmatter.calloutText}\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n      </article>\n\n      {sections.map(({ node, next }, index) => {\n        const parent = node.title\n        const children = node.subpages\n        const nextParent = next && sections[index].next.title\n        const nextParentSlug = next && sections[index].next.slug\n\n        return (\n          <>\n            {node.subpages.length > 0 ? (\n              <>\n                {postTitle === parent ? (\n                  <>\n                    {/* Parent to first child */}\n                    <AniLink\n                      cover\n                      direction=\"up\"\n                      bg=\"white\"\n                      to={children[0].slug}\n                      className={styles.nextPage}\n                      trigger={async pages => {\n                        const entry = await pages.entry\n                        const scrollingEl = entry.node.querySelector(\n                          \"#mainContent\"\n                        )\n                        scrollingEl.scrollTo(0, 0)\n                      }}\n                    >\n                      <h2>Next Up</h2>\n                      <div className={styles.nextPageContainer}>\n                        <span className={styles.nextPageNumber}>1.</span>\n                        <h3>{parent}</h3>\n                        <h4>{children[0].title}</h4>\n                        <div className={styles.nextExcerpt}>\n                          {findMatch.map(({ node, next }, ind) => {\n                            const nextExcerpt =\n                              next && findMatch[ind].next.excerpt\n\n                            return (\n                              <>\n                                {postTitle === node.frontmatter.title && (\n                                  <>{nextExcerpt}</>\n                                )}\n                              </>\n                            )\n                          })}\n                        </div>\n                      </div>{\" \"}\n                      <div className={styles.nextPageButton}>\n                        <span>\n                          Keep Reading{\" \"}\n                          <svg\n                            width=\"12\"\n                            height=\"15\"\n                            viewBox=\"0 0 12 15\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <line\n                              x1=\"6\"\n                              y1=\"1\"\n                              x2=\"6\"\n                              y2=\"12\"\n                              stroke=\"white\"\n                              strokeWidth=\"2\"\n                              strokeLinecap=\"round\"\n                            />\n                            <path\n                              d=\"M11 9L6 14L1 9\"\n                              stroke=\"white\"\n                              strokeWidth=\"2\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                            />\n                          </svg>\n                        </span>\n                      </div>\n                    </AniLink>\n                  </>\n                ) : (\n                  <>\n                    {children.map(({ title }, i) => {\n                      return (\n                        <>\n                          {/* Child */}\n                          {postTitle === title ? (\n                            <>\n                              {i < children.length - 1 ? (\n                                <>\n                                  <AniLink\n                                    cover\n                                    direction=\"up\"\n                                    bg=\"white\"\n                                    to={children[i + 1].slug}\n                                    className={styles.nextPage}\n                                    trigger={async pages => {\n                                      const entry = await pages.entry\n                                      const scrollingEl = entry.node.querySelector(\n                                        \"#mainContent\"\n                                      )\n                                      scrollingEl.scrollTo(0, 0)\n                                    }}\n                                  >\n                                    <h2>Next Up</h2>\n                                    <div className={styles.nextPageContainer}>\n                                      <span className={styles.nextPageNumber}>\n                                        {i + 2}.\n                                      </span>\n                                      <h3>{parent}</h3>\n                                      <h4>{children[i + 1].title}</h4>\n                                      <div className={styles.nextExcerpt}>\n                                        {findMatch.map(\n                                          ({ node, next }, ind) => {\n                                            const nextExcerpt =\n                                              next &&\n                                              findMatch[ind].next.excerpt\n\n                                            return (\n                                              <>\n                                                {postTitle ===\n                                                  node.frontmatter.title && (\n                                                  <>{nextExcerpt}</>\n                                                )}\n                                              </>\n                                            )\n                                          }\n                                        )}\n                                      </div>\n                                    </div>{\" \"}\n                                    <div className={styles.nextPageButton}>\n                                      <span>\n                                        Keep Reading{\" \"}\n                                        <svg\n                                          width=\"12\"\n                                          height=\"15\"\n                                          viewBox=\"0 0 12 15\"\n                                          fill=\"none\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                          <line\n                                            x1=\"6\"\n                                            y1=\"1\"\n                                            x2=\"6\"\n                                            y2=\"12\"\n                                            stroke=\"white\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"round\"\n                                          />\n                                          <path\n                                            d=\"M11 9L6 14L1 9\"\n                                            stroke=\"white\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                          />\n                                        </svg>\n                                      </span>\n                                    </div>\n                                  </AniLink>\n                                </>\n                              ) : (\n                                <>\n                                  {/* Last child to Parent */}\n                                  <AniLink\n                                    cover\n                                    direction=\"up\"\n                                    bg=\"white\"\n                                    to={nextParentSlug}\n                                    className={styles.nextPage}\n                                    trigger={async pages => {\n                                      const entry = await pages.entry\n                                      const scrollingEl = entry.node.querySelector(\n                                        \"#mainContent\"\n                                      )\n                                      scrollingEl.scrollTo(0, 0)\n                                    }}\n                                  >\n                                    <h2>Next Up</h2>\n                                    <div className={styles.nextPageContainer}>\n                                      <h4 className={styles.nextPageSection}>\n                                        {nextParent}\n                                      </h4>\n                                      <div className={styles.nextExcerpt}>\n                                        {findMatch.map(\n                                          ({ node, next }, ind) => {\n                                            const nextExcerpt =\n                                              next &&\n                                              findMatch[ind].next.excerpt\n\n                                            return (\n                                              <>\n                                                {postTitle ===\n                                                  node.frontmatter.title && (\n                                                  <>{nextExcerpt}</>\n                                                )}\n                                              </>\n                                            )\n                                          }\n                                        )}\n                                      </div>\n                                    </div>{\" \"}\n                                    <div className={styles.nextPageButton}>\n                                      <span>\n                                        Keep Reading{\" \"}\n                                        <svg\n                                          width=\"12\"\n                                          height=\"15\"\n                                          viewBox=\"0 0 12 15\"\n                                          fill=\"none\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                          <line\n                                            x1=\"6\"\n                                            y1=\"1\"\n                                            x2=\"6\"\n                                            y2=\"12\"\n                                            stroke=\"white\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"round\"\n                                          />\n                                          <path\n                                            d=\"M11 9L6 14L1 9\"\n                                            stroke=\"white\"\n                                            strokeWidth=\"2\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                          />\n                                        </svg>\n                                      </span>\n                                    </div>\n                                  </AniLink>\n                                </>\n                              )}\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      )\n                    })}\n                  </>\n                )}\n              </>\n            ) : (\n              <></>\n            )}\n          </>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n        next {\n          excerpt(pruneLength: 200)\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allPagesJson {\n      edges {\n        node {\n          title\n          slug\n          excerpt\n          subpages {\n            title\n            slug\n            excerpt\n          }\n        }\n        next {\n          title\n          slug\n          excerpt\n          subpages {\n            title\n            slug\n            excerpt\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        calloutTitle\n        calloutText\n        coverImage {\n          childImageSharp {\n            fluid(quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}